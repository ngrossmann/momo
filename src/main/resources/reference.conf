akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  log-dead-letters = 0
  loglevel = DEBUG
  log-config-on-start = off
  actor {
    deployment {
      /db/metric {
        router = "round-robin"
        nr-of-instances = 8
      }
    }
  }
}
couchbase {
  cluster = ["127.0.0.1:8092"]
  bucket = "default"
}

momo {
  grafana-root = "classpath"
  metric-ttl = 1 day
  document-interval = 10 minutes
  query-timeout = 5s
  target-query-timeout = 500 milliseconds
  target-update-interval = 1 minute

  internal-metrics {
    tick-interval = 1 second
    series-key-prefix = "momo"
  }

  graphite {
    listen-address = "0.0.0.0"
    port = 2003
  }

  http {
    listen-address = "0.0.0.0"
    port = 8080
  }

  statsd {
    listen-address = "0.0.0.0"
    port = 8125
  }

  couchbase {
    bucket-open-retry-delay = 5 seconds
    series-key-prefix = "series"
    scheduler-threads {
      core-pool-size = 8
      max-pool-size = 12
      queue-size = 200
    }
    dashboard {
      design-document = "dashboards"
      title-index = "title-index"
    }
    target {
      design-document = "targets"
      name-view = "targets"
    }
  }
}

kamon {
  metric {
    tick-interval = 1 second

    filters {
      akka-dispatcher {
        includes = ["**"]
        excludes = []
      }

      akka-actor {
        includes = ["**"]
        excludes = []
      }
    }
  }

  modules {
    kamon-akka {
      auto-start = yes
      requires-aspectj = yes
      extension-id = "kamon.akka.Akka"
    }
  }

  statsd {
    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = "127.0.0.1"
    port = 8125

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    #flush-interval = 1 second

    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 4096 bytes

    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      # application = "momo"
    }
  }
}
